[{"content":" 前言:\n本文主要参考自莱特雷-letere博主的帖子【Hugo】PJAX实现无刷新加载页面 解决上述帖子 没解决 或者说是 小问题 若是参考本文还解决不了，请自行阅读源码修复 1. 引入Pjax (1) PJAX主要分为两个版本，带 JQuery 和不带JQuery 的，本站用的是不带JQuery 的\ndefunkt/jquery-pjax（不带 JQuery） MoOx/pjax（带 JQuery） (2) 我就不分析页面内容了，直接在 layouts/partials/footer/custom.html 贴莱特雷-letere博主的代码\n1 2 3 4 5 6 7 8 9 \u0026lt;!-- 【custom.html】 --\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/pjax/pjax.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; var pjax = new Pjax({ selectors: [ \u0026#34;.main-container\u0026#34; //告诉 PJAX 只替换页面中的这个 DOM 区域 ] }) \u0026lt;/script\u0026gt; PJAX 只会替换 HTML，不会自动执行页面里的 \u0026lt;script\u0026gt;\n已经基本引入了PJAX，下面解决PJAX带来的问题\n2. 解决问题 2.1 URL路径修复 问题描述 URL后面多出一个参数?t=xxx时间戳 产生原因 PJAX 会默认会在请求 URL 后加一个随机参数（例如 ?_pjax=xxxx或者?t=xxx）,来防止缓存\n修复好处 唯一的、规范的 URL，SEO 不受影响，搜索引擎能识别，不会重复收录\n解决思路 使用pjax内置的参数cacheBust 或者 自写函数获取当前路径识别后去除 2.1.1 引入cacheBust 设置 cacheBust: false 表示不加随机参数，让浏览器/服务器缓存生效 好处：页面切换更快（利用缓存） 坏处：如果内容有更新，可能短时间内看不到最新版本（因为有缓存）\n在layouts/partials/footer/custom.html 引入 cacheBust: false 1 2 3 4 5 6 \u0026lt;script\u0026gt; var pjax = new Pjax({ //其他... cacheBust: false, }); \u0026lt;/script\u0026gt; 2.1.2 自写函数去除 也是在layouts/partials/footer/custom.html引入以下代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;script\u0026gt; // -------- 去掉PJAX 脚本给 URL 加上的时间戳 ?t=xxxx -------- function removeTParam() { if (window.location.search.includes(\u0026#34;?t=\u0026#34;)) { history.replaceState({}, \u0026#34;\u0026#34;, window.location.pathname); } } // 首次加载时立即去掉 removeTParam(); document.addEventListener(\u0026#39;pjax:send\u0026#39;, () =\u0026gt; { removeTParam(); //其他... }); document.addEventListener(\u0026#39;pjax:complete\u0026#39;, () =\u0026gt; { removeTParam(); //其他... }); \u0026lt;/script\u0026gt; 2.2 文章样式 问题描述 随便点进其中一篇文章，可以发现文章内容的样式丢失 ","date":"2025-08-20T10:40:00+01:00","image":"/p/pjax/pjax-cover_hu_2d43e3875b58c596.png","permalink":"/p/pjax/","title":"解决引入Pjax带来的各种问题"},{"content":"优化浅色模式背景 其实，配置完了这个stack主题后，感觉浅色背景就是比较瞎眼 已经眼瞎了\n首先我想直接插入图片进行更改，然后发现大部分背景这样并不显得好看，文字可读性也会降低\n然后就直接改背景颜色就ok了,首先要追随源码的样式\n样式的源码 在Stack主题文件夹下/assets/scss/找到了variables.scss文件\n从中找到了需要改的代码\n样式含义与用途 整个页面主体色彩控制 变量名 含义 示例用途 --body-background 页面主体背景色 \u0026lt;body\u0026gt; 背景色 --accent-color 主强调色（按钮、链接等） 按钮背景色、重要元素 --accent-color-darker 主强调色的深色版本 鼠标悬停、边框 --accent-color-text 强调色上的文字颜色 强调按钮上的文字 --body-text-color 页面正文文字颜色 普通段落文本 卡片组件色彩控制 变量名 含义 示例用途 --card-background 卡片默认背景色 卡片整体背景 --card-background-selected 卡片被选中或悬停时背景色 hover 或 active 状态 --card-text-color-main 卡片主文字颜色 标题、正文 --card-text-color-secondary 次要文字颜色 副标题、描述 --card-text-color-tertiary 第三级文字颜色 注释、小标签 改动 知道是怎么一回事，就可以着手改动了，首先需要回到项目的目录下，找到/assets/scss/custom.scss文件，没有就创建，这是供用户自定义的，并不推荐直接改主题源码\n为什么不改源码也能直接背景颜色？\n这个文件处于样式文件的末尾，最后才引入这个文件\n从而覆盖原先的属性，达到“自定义”的效果。\n把要修改的代码复制下来放进custom.scss文件里修改\n下面这个是目前我的网站在用的 可能用着用着就又改了\n蓝莓奶油风\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 :root { --body-background: #F2F5FB; /* 柔和奶蓝背景 */ --body-text-color: #2A3650; /* 深蓝文字 */ --accent-color: #789EDC; /* 蓝莓色按钮/链接 */ --accent-color-darker: #4D6FB0; /* hover 深蓝 */ --accent-color-text: #FFFFFF; /* 白色文字 */ --card-background: #FFFFFF; /* 卡片背景 */ --card-background-selected: #DCE4F7; /* hover 浅蓝 */ --card-text-color-main: #2A3650; /* 主文字 */ --card-text-color-secondary: #5A6F8C; /* 次文字 */ --card-text-color-tertiary: #889AB0; /* 第三级文字 */ } 也可以把它丢给AI，让它给个配色方案，慢慢调自己喜欢的\n修改网站布局 首先我们需要知道网站的布局是怎样的\nF12打开控制台很容易就知道container是页面内容的父级容器\n1.左侧栏：容器类 .left-sidebar\n2.右侧栏：容器类 .right-sidebar\n3.中间内容区：容器类 .content，宽度由左右两侧栏的宽度控制\n💡关键点 我们只要调节两侧侧栏的大小，就可以直接控制中间内容区域的宽度，无需单独修改中间区域\n左右侧栏容器分别是 left-sidebar 和 right-sidebar\n需要为不同场景设置不同显示效果，通常通过响应式规则 @include respond(md/lg/xl) 来实现：\n修改 那么我们就可以着手修改了，不用想着去找源码了，直接在主目录assets/scss/custom.scss这个文件直接添加，覆盖掉之前的布局，没有这个文件就创建\n目前我的网站在用下面这个,喜欢的话就直接复制\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /* 基础容器：水平居中 */ .container { margin-left: auto; margin-right: auto; /* 布局模式 */ \u0026amp;.extended { /* range: 768-1024 */ @include respond(md) { max-width: 1024px; /* 容器最大宽度 */ --left-sidebar-max-width: 25%;/* 左侧栏最大宽度 */ --right-sidebar-max-width: 30%;/* 右侧栏最大宽度 */ } /* range: 1024-1280 */ @include respond(lg) { max-width: 1280px; --left-sidebar-max-width: 25%; --right-sidebar-max-width: 22%; } } } 也可以慢慢调自己喜欢的\n","date":"2025-08-16T10:07:13+01:00","image":"/p/hugo-stack-optimization/Hugo-Stack_hu_d7976e6639a5a236.png","permalink":"/p/hugo-stack-optimization/","title":"Hugo-Stack主题美化 "},{"content":" 为什么使用twikoo 免费、部署简单 无域名限制 twikoo查看更多 1. 引入Twikoo 1.1 部署 Twikoo 分为云函数和前端两部分，需要同时部署\n云函数部署 twikoo有多种云函数部署方式，具体的可以到官网查看教程选择twikoo云函数部署 前端部署 twikoo有多种网站框架的不同主题的配置方式twikoo前端部署 也可自行在前端代码中通过 CDN 引入 注意事项 如果是用MongoDB Atlas这个当数据库的话，连接字符串记得改里面的\u0026lt;username\u0026gt;:\u0026lt;password\u0026gt;为创建的用户名:密码\n当时我就直接复制去部署了，发现没改后去后台服务器改了没效果，最后删了重新部署才行\n1.2 在Stack中 Stack就内置有twikoo，在hugo.yaml添加上云函数部署得到的 envId\nTwikoo就引入了\n2. Pjax导致Twikoo出现的问题 如果引入PJAX后有出现很多的问题，可以参考这个解决引入Pjax带来的各种问题\n2.1 问题描述 (1) 第一次点击文章进入时，评论区不显示\n(2) 评论显示错乱（某篇文章的评论内容跑到另一篇文章下）\n2.2 产生原因 (1) 通过 PJAX 跳转，评论区容器有，但 JS 并没有重新执行初始化，所以评论区域没出现。\n看这个报错信息应该是浏览器在执行你的脚本时，Twikoo 的 JS 根本还没加载\n(2) Twikoo 是根据 path区分不同页面的评论的。\nPJAX 切换时，如果没有重新正确传递 path，Twikoo 可能仍然用上一个页面的 path 或缓存的评论数据，导致评论错位\n2.3 解决思路 引进Twikoo后需要在 PJAX 页面切换完成后 手动重新初始化 Twikoo\n2.4 具体步骤 2.4.1 初步更改 在layouts/partials/custom.html引入以下代码:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \u0026lt;script src=\u0026#34;//cdn.jsdelivr.net/npm/twikoo@1.6.39/dist/twikoo.all.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; function initTwikoo() { const el = document.getElementById(\u0026#39;tcomment\u0026#39;); if (!el) return; // 清空旧实例，防止重复渲染 el.innerHTML = \u0026#39;\u0026#39;; // 初始化 Twikoo twikoo.init({ envId: \u0026#39;{{ .Site.Params.comments.twikoo.envId }}\u0026#39;, el: \u0026#39;#tcomment\u0026#39;, path: window.location.pathname, }); } // 首次页面加载 document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, () =\u0026gt; { //其他... initTwikoo(); }); document.addEventListener(\u0026#39;pjax:complete\u0026#39;, () =\u0026gt; { //其他... initTwikoo(); }); \u0026lt;/script\u0026gt; 引入上述代码发现没整好这个评论跑偏的问题,去寻找 stack 主题里面的 twikoo 的源码\n2.4.2 最后更改 在主题目录下/layouts/partials/comments/provider/twikoo.html\n源码会把 path 固定成配置里的值,但 PJAX 切换文章时这个值不会更新，又会影响上面路径的更新，所以把源码给注释掉\n这样 twikoo 在引用 PJAX 后出现的问题就解决了\n","date":"2025-08-16T03:51:56+01:00","image":"/p/pjax-twikoo/pjax-twikoo_hu_2fdd11bd273065d9.png","permalink":"/p/pjax-twikoo/","title":"Pjax+Twikoo评论区引入并修复"},{"content":"1. \u0026#x1f60a; 概述 MusicTag 是一款音乐刮削工具，就是查找音乐的源信息\n支持多种主流音频格式：\nFLAC, APE, WAV, AIFF, WV, TTA\nMP3, MP4, M4A, OGG, MPC, OPUS\nWMA, DSF, DFF 等\n总的来说，有这个工具你就能查找音乐的各种信息\n但是没有歌就要另外去找了，这里推荐几个网站下载：\n歌曲宝\n音乐魔石\n种子音乐\n大部分的歌都是有的，找不到的可以另找下网站下载\n2. \u0026#x2b50; 推荐下载地址 夸克网盘\n百度网盘 提取码：x081\n蓝奏云 压缩包密码：www.coolapk.com ","date":"2025-08-13T00:00:00Z","image":"/p/musictag/musictag_hu_4c2d9862e4decc8.png","permalink":"/p/musictag/","title":"MusicTag"}]